---
- import_role:
    name: Juniper.junos

- name: "create command string prepend - ipv4 prefix(es)"
  set_fact: prefix={{ 'set policy-options prefix-list ' + cust + '-' + dc_asn_bysite + ' ' }}
- name: "create list of full set commands - ipv4 prefix(es)"
  set_fact: dc_v4pfxcmds_bysite={{ [prefix] | product(dc_v4pfxs_bysite.split('\n')) | map('join') | list }}

- name: "add optional {{ inventory_hostname }} {{ dcc }} directconnect ipv4 prefix-list prefix(es) - customer: {{ cust }}"
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no -o userknownhostsfile=/dev/null"
    #dc_asn_bysite: "{{ lookup('vars', 'dc_asn_' + node_id) }}"
    #dc_v4pfxs_bysite: "{{ lookup('vars', 'dc_v4pfxs_' + node_id) }}"
  juniper_junos_config:
    config_mode: "private"
    load: "set"
    lines:
      - "{{ item }}"
  connection: netconf
  register: response
  with_items:
    - "{{ dc_v4pfxcmds_bysite }}"

- name: "config update output"
  debug:
    msg: "{{ (response | json_query('results[*].diff_lines')) }}"

- name: "save optional {{ inventory_hostname }} - {{ dcc }} - {{ cust }} v4pfxs-set-update"
  delegate_to: localhost
  ansible.builtin.copy:
   content: "{{ dc_v4pfxcmds_bysite | join('\n') }}"
   dest: "{{ base_dir }}/directconnect_configs/{{ node_id }}/{{ dcc }}_{{ cust }}/{{ inventory_hostname }}_v4pfxs.set"

- name: "copy optional {{ inventory_hostname }} - {{ dcc }} - {{ cust }} v4pfxs-set-update file to v4pfxs-del-update file"
  vars:
    datetime: "{{ lookup('pipe','date +%Y%m%d%H%M%S') }}"
  delegate_to: localhost
  ansible.builtin.copy:
    src: "{{ base_dir }}/directconnect_configs/{{ node_id }}/{{ dcc }}_{{ cust }}/{{ inventory_hostname }}_v4pfxs.set"
    dest: "{{ base_dir }}/directconnect_configs/{{ node_id }}/{{ dcc }}_{{ cust }}/{{ inventory_hostname }}_v4pfxs.del"

- name: "replace optional {{ inventory_hostname }} - {{ dcc }} - {{ cust }} v4 prefix(es) set commands with delete commands in v4pfxs-del-update file"
  delegate_to: localhost
  ansible.builtin.replace:
    path: "{{ base_dir }}/directconnect_configs/{{ node_id }}/{{ dcc }}_{{ cust }}/{{ inventory_hostname }}_v4pfxs.del"
    regexp: 'set '
    replace: 'delete '

- name: "add date time stamp to v4pfxs-set-update filename"
  vars:
    dirpath: "{{ base_dir }}/directconnect_configs/{{ node_id }}/{{ dcc }}_{{ cust }}"
    datetime: "{{ lookup('pipe','date +%Y%m%d%H%M%S') }}"
  delegate_to: localhost
  command: "mv {{ dirpath }}/{{ inventory_hostname }}_v4pfxs.set {{ dirpath }}/{{ inventory_hostname }}_v4pfxs.set.{{ datetime }}"

- name: "add date time stamp to v4pfxs-del-update filename"
  vars:
    dirpath: "{{ base_dir }}/directconnect_configs/{{ node_id }}/{{ dcc }}_{{ cust }}"
    datetime: "{{ lookup('pipe','date +%Y%m%d%H%M%S') }}"
  delegate_to: localhost
  command: "mv {{ dirpath }}/{{ inventory_hostname }}_v4pfxs.del {{ dirpath }}/{{ inventory_hostname }}_v4pfxs.del.{{ datetime }}"

