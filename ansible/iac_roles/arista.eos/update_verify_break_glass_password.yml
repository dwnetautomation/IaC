---
# Build config for Arista EOS

- name: get password from pmp
  include_tasks: ../../iac.common/tasks/pmp_get_password.yml
  tags:
  - never
  - chAnGe_ServIce_AccOunT_PassWord

- name: Change service account password
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o userknownhostsfile=/dev/null'
  eos_user:
    name: "{{ item.key }}"
    configured_password: "{{ item.value.password }}"
    privilege: 15
    state: present
    update_password: always
  when: item.value.password is defined
  loop: "{{ query('dict', service_accounts|default({})) }}"
  connection: network_cli
  tags:
  - never
  - chAnGe_ServIce_AccOunT_PassWord
  no_log: true

- name: save config
  import_tasks: save_config.yml
  tags:
  - never
  - chAnGe_ServIce_AccOunT_PassWord

- name: allow local login while tacacs+ is active for test
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o userknownhostsfile=/dev/null'
  eos_config:
    lines:
      - aaa authentication login default local group tacacs+
      - aaa authorization exec default local group tacacs+ none
      - aaa authorization commands all default local group tacacs+ none
  connection: network_cli
  tags:
  - never
  - chAnGe_ServIce_AccOunT_PassWord
  register: result
  no_log: true

- name: switch to the device local login user
  set_fact:
    swapvar_user: "{{ ansible_user }}"
    swapvar_pass: "{{ ansible_password }}"
    ansible_user: "{{ item.key }}"
    ansible_password: "{{ item.value.password }}"
  when: item.value.password is defined
  loop: "{{ query('dict', service_accounts|default({})) }}"
  tags:
  - never
  - chAnGe_ServIce_AccOunT_PassWord
  register: my_output
  no_log: true

- name: confirm login as device local login user with new password
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o userknownhostsfile=/dev/null'
  eos_command:
    commands: show users detail
  connection: network_cli
  tags:
  - never
  - chAnGe_ServIce_AccOunT_PassWord
  register: result
  #no_log: true

- name: device log confirmation of new password login
  debug:
    msg: "{{ result }}"
  tags:
  - never
  - chAnGe_ServIce_AccOunT_PassWord

- name: switch back to the ansible login user
  set_fact:
    ansible_user: "{{ swapvar_user }}"
    ansible_password: "{{ swapvar_pass }}"
  tags:
  - never
  - chAnGe_ServIce_AccOunT_PassWord
  register: my_output
  no_log: true

- name: revert to no local login allowed while tacacs+ is active
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o userknownhostsfile=/dev/null'
  eos_config:
    lines:
      - aaa authentication login default group tacacs+ local
      - aaa authorization exec default group tacacs+ local none
      - aaa authorization commands all default group tacacs+ local none
  connection: network_cli
  tags:
  - never
  - chAnGe_ServIce_AccOunT_PassWord
  register: result
  no_log: true

- name: re-confirm login as ansible tacacs+ user 
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o userknownhostsfile=/dev/null'
  eos_command:
    commands: show users detail
  connection: network_cli
  tags:
  - never
  - chAnGe_ServIce_AccOunT_PassWord
  register: result
  no_log: true

- name: device log confirmation of ansible tacacs+ user login
  debug:
    msg: "{{ result }}"
  tags:
  - never
  - chAnGe_ServIce_AccOunT_PassWord

